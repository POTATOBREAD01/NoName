<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.project.mapper.MemberMapper">

<resultMap type="org.project.domain.MemberVO" id="memberMap">
	<id property="userid" column="userid"/>
	<result property="userid" column="userid"/>
	<result property="userpw" column="userpw"/>
	<result property="username" column="username"/>
	<result property="useraddr" column="useraddr"/>
	<result property="userphone" column="userphone"/>
	<collection property="authList" resultMap="authMap">
	</collection>
</resultMap>

<resultMap type="org.project.domain.AuthVO" id="authMap">
	<result property="userid" column="userid"/>
	<result property="auth" column="auth"/>
</resultMap>

<!-- 정보 읽어오기 -->
<select id="read" resultMap="memberMap">
  SELECT 
    mem.userid, 
    mem.userpw, 
    mem.username,
    mem.useraddr,
    mem.userphone,
    mem.enabled, 
    auth.auth
  FROM tbl_member AS mem
  LEFT JOIN tbl_member_auth AS auth 
    ON mem.userid = auth.userid
  WHERE mem.userid = #{userid}
</select>

<!-- 회원정보 삽입 -->
<insert id="insertCustomer" parameterType="org.project.domain.MemberVO">
	INSERT INTO tbl_member (username, userid, userpw, userphone, useraddr, userno, useremail)
	VALUES (#{username}, #{userid}, #{userpw}, #{userphone}, #{useraddr}, #{userno}, #{useremail})
</insert>
<!-- 권한정보 삽입 -->
<insert id="insertAuth" parameterType="org.project.domain.MemberVO">
	INSERT INTO tbl_member_auth (userid, auth)
	VALUES (#{userid}, 'ROLE_MEMBER')
</insert>

<!-- 아이디 중복 검사 -->
<select id="countById" parameterType="string" resultType="int">
	SELECT COUNT(*) FROM tbl_member WHERE userid = #{userid}
</select>

<!-- 단일 고객 조회 -->
<select id="getCustomerByUserid" parameterType="String" resultType="org.project.domain.MemberVO">
  SELECT 
    mem.userid, mem.username, mem.userpw, mem.userphone, mem.useraddr, mem.proofno,
    eb.month1, eb.month2, eb.month3, eb.month4, eb.month5, eb.month6,eb.month7, eb.month8,eb.month9, eb.month10, eb.month11, eb.month12
  FROM tbl_member mem
  LEFT JOIN elect_bill eb ON mem.userid = eb.userid
  WHERE mem.userid = #{userid}
</select>

<!-- 고객 삭제 -->
<delete id="deleteCustomer" parameterType="string">
    DELETE FROM user WHERE userid = #{userid}
</delete>

<!-- 전체 고객 목록 조회 -->
<select id="getAllCustomers" resultType="org.project.domain.MemberVO">
    SELECT 
        m.userid, m.userpw, m.username, m.useraddr, m.userphone, m.enabled,
        e.month1, e.month2, e.month3, e.month4, e.month5, e.month6, e.month7, e.month8, e.month9, e.month10, e.month11, e.month12
    FROM tbl_member m
    JOIN elect_bill e ON m.userid = e.userid
</select>

<!-- 고객 번호 검색 -->
<select id="searchCustomerByUserno" resultType="org.project.domain.MemberVO">
    SELECT * FROM tbl_member WHERE userno = #{userno}
</select>

<!-- 이메일 중복 검사 -->
<select id="countByEmail" parameterType="String" resultType="int">
    SELECT COUNT(*) FROM tbl_member WHERE useremail = #{email}
</select>

<!-- 고객번호 중복 검사 -->
<select id="isUsernoExist" resultType="boolean" parameterType="String">
    SELECT COUNT(*) > 0
    FROM tbl_member
    WHERE userno = #{userno}
</select>

<!-- 전기 사용량 삽입 -->
<insert id="insertElectBill" parameterType="org.project.domain.MemberVO">
    INSERT INTO elect_bill (
        userid, month1, month2, month3, month4, month5, month6,
        month7, month8, month9, month10, month11, month12
    ) VALUES (
        #{userid}, #{month1}, #{month2}, #{month3}, #{month4}, #{month5}, #{month6},
        #{month7}, #{month8}, #{month9}, #{month10}, #{month11}, #{month12}
    )
</insert>
</mapper>
